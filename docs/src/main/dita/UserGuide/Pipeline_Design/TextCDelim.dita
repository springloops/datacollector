<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
      
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_lg2_gcg_jx">
 <title>Text Data Format with Custom Delimiters</title>
 <conbody>
        <p><indexterm>text data format<indexterm>custom
                delimiters</indexterm></indexterm><indexterm>custom delimiters<indexterm>text data
                    format</indexterm></indexterm>By default, the text data format creates records
            based on line breaks, creating a record for each line of text. You can configure origins
            to create records based on custom delimiters. </p>
        <p>Use custom delimiters when the origin system uses delimiters to separate logical sections
            of data that you want to use as records. A custom delimiter might be as simple as a
            semicolon or might be a set of characters. You can even use an XML tag as a custom
            delimiter to read XML data.</p>
        <p>
            <note>When using a custom delimiter, the origin uses the delimiter characters to create
                records, ignoring new lines.</note>
        </p>
        <p>You can include the custom delimiters in records or you can remove them.</p>
        <p>For example, say you configure the Directory origin to process a file with the following
            text, using a semicolon as a delimiter, and discarding the
            delimiter:<codeblock>8/12/2016 6:01:00 unspecified error message;8/12/2016 
6:01:04 another error message;8/12/2016 6:01:09 just a warning message;</codeblock></p>
        <p>The origin generates the following records, with the data in a single text
                field:<simpletable frame="all" relcolwidth="1.0*" id="simpletable_qcp_tjn_jx">
                <sthead>
                    <stentry>Text</stentry>
                </sthead>
                <strow>
                    <stentry>8/12/2016 6:01:00 unspecified error message</stentry>
                </strow>
                <strow>
                    <stentry>8/12/2016 <p>6:01:04 another error message</p></stentry>
                </strow>
                <strow>
                    <stentry>8/12/2016 6:01:09 just a warning message</stentry>
                </strow>
            </simpletable></p>
        <p>Note that the origin retains the line break, but does not use it to create a separate
            record.</p>
    </conbody>
</concept>
